Linux* Driver for Intel(R) XL710/X710 Virtual Function
======================================================
 
September 29, 2014
 
======================================================
 
Contents
========
- Overview
- Building and Installation
- Command Line Parameters
- Additional Configurations
- Known Issues
- Support
- License
 
================================================================================
 
 
 
Overview
--------
 
This document describes the i40evf Linux* Driver for Intel(R) XL710 and X710 Virtual Function Network Devices. 
 
The Linux* virtual function driver supports the following kernel versions:
2.6.32 and newer
 
 
The i40evf driver supports XL710- and X710-based virtual
function devices that can only be activated on kernels with CONFIG_PCI_IOV enabled.
SR-IOV requires the correct platform and OS support.
 
The i40evf driver supports virtual functions generated by the i40e driver,
with one or more VFs enabled through sysfs.
 
The guest OS loading the i40evf driver must support MSI-X interrupts.
 
This driver is only supported as a loadable module at this time. Intel is
not supplying patches against the kernel source to allow for static linking of
the drivers.
 
For questions related to hardware requirements, refer to the documentation
supplied with your Intel adapter. All hardware requirements listed apply to
use with Linux.
 
Instructions on updating ethtool can be found in the section Additional 
Configurations later in this document.
 
 
 
Identifying Your Adapter
------------------------
The driver in this release is compatible with XL710 and X710-based Intel
Ethernet Network Devices.
 
For information on how to identify your adapter, go to the Adapter &
Driver ID Guide at:
http://support.intel.com/support/go/network/adapter/proidguide.htm
 
For the best performance, make sure the latest NVM/FW is installed on
your device and that you are using the newest drivers.
 
For the latest NVM/FW images and Intel network drivers, refer to the 
following website and select your adapter.
http://www.intel.com/support
 
 
Building and Installation
-------------------------
 
To build a binary RPM* package of this driver, run 'rpmbuild -tb
i40evf-<x.x.x>.tar.gz', where <x.x.x> is the version number for the driver tar file.
 
NOTES:
 
- For the build to work properly, the currently running kernel MUST match
  the version and configuration of the installed kernel sources. If you have
  just recompiled the kernel reboot the system before building.
- RPM functionality has only been tested in Red Hat distributions.
 
1. Move the virtual function driver tar file to the directory of your choice. For
   example, use '/home/username/i40evf' or '/usr/local/src/i40evf'.
 
2. Untar/unzip the archive, where <x.x.x> is the version number for the
   driver tar file:
   tar zxf i40evf-<x.x.x>.tar.gz
 
3. Change to the driver src directory, where <x.x.x> is the version number
   for the driver tar:
   cd i40evf-<x.x.x>/src/
 
4. Compile the driver module:
   # make install
   The binary will be installed as:
   /lib/modules/<KERNEL VERSION>/kernel/drivers/net/i40evf/i40evf.[k]o
 
   The install location listed above is the default location. This may differ
   for various Linux distributions.
 
5. Load the module using the modprobe command:
   modprobe <i40evf> [parameter=port1_value,port2_value]
 
   Make sure that any older i40evf drivers are removed from the kernel before
    loading the new module:
   rmmod i40evf; modprobe i40evf
 
6. Assign an IP address to the interface by entering the following,
   where ethX is the interface name that was shown in dmesg after modprobe:
   
   ip address add <IP_address>/<netmask bits> dev ethX
 
7. Verify that the interface works. Enter the following, where IP_address
   is the IP address for another machine on the same subnet as the interface
   that is being tested:
   ping <IP_address>
 
 
 
Command Line Parameters
-----------------------
 
The i40evf driver does not support any command line parameters.
 
 
Additional Features and Configurations
-------------------------------------------
 
 
 
Viewing Link Messages
---------------------
 
Link messages will not be displayed to the console if the distribution is
restricting system messages. In order to see network driver link messages on
your console, set dmesg to eight by entering the following:
dmesg -n 8
 
NOTE: This setting is not saved across reboots.
 
 
ethtool
-------
  
The driver utilizes the ethtool interface for driver configuration and
diagnostics, as well as displaying statistical information. The latest
ethtool version is required for this functionality. Download it at
http://ftp.kernel.org/pub/software/network/ethtool/
 
 
 
================================================================================
 
 
Known Issues/Troubleshooting
----------------------------
 
 
Multiple log error messages on i40evf driver removal
----------------------------------------------------
If you have several VFs and you remove the i40evf driver, several instances of
the following log errors are written to the log:
  Unable to send opcode 2 to PF, err I40E_ERR_QUEUE_EMPTY, aq_err ok
  Unable to send the message to VF 2 aq_err 12
  ARQ Overflow Error detected
 
 
Virtual machine does not get link
---------------------------------
 
If the virtual machine has more than one virtual port assigned to it, and those
virtual ports are bound to different physical ports, you may not get link on all
of the virtual ports. The following command may work around the issue:
ethtool –r <PF>
Where <PF> is the PF interface in the host, for example: p5p1. You may need to
run the command more than once to get link on all virtual ports.
 
 
MAC address of Virtual Function changes unexpectedly
----------------------------------------------------
 
If a Virtual Function's MAC address is not assigned in the host, then the
VF (virtual function) driver will use a random MAC address. This random MAC
address may change each time the VF driver is reloaded. You can assign a
static MAC address in the host machine. This static MAC address will survive
a VF driver reload.
 
 
Hardware Issues
---------------
 
For known hardware and troubleshooting issues, either refer to the "Release
Notes" in your User Guide, or for more detailed information, go to
http://www.intel.com.
 
In the search box enter your devices controller ID followed by "spec update"
(i.e., XL710 spec update). The specification update file has complete
information on known hardware issues.
 
 
 
Software Issues
---------------
 
NOTE: After installing the driver, if your Intel Ethernet Network Connection
is not working, verify that you have installed the correct driver.
 
 
Compiling the Driver
--------------------
 
When trying to compile the driver by running make install, the following error
may occur: "Linux kernel source not configured - missing version.h"
 
To solve this issue, create the version.h file by going to the Linux source
tree and entering:
# make include/linux/version.h
 
 
Multiple Interfaces on Same Ethernet Broadcast Network
------------------------------------------------------
 
Due to the default ARP behavior on Linux, it is not possible to have one
system on two IP networks in the same Ethernet broadcast domain
(non-partitioned switch) behave as expected. All Ethernet interfaces will
respond to IP traffic for any IP address assigned to the system. This results
in unbalanced receive traffic.
 
If you have multiple interfaces in a server, either turn on ARP filtering by
entering:
echo 1 > /proc/sys/net/ipv4/conf/all/arp_filter
 
This only works if your kernel's version is higher than 2.4.5.
 
 
NOTE: This setting is not saved across reboots. The configuration change can
be made permanent by adding the following line to the file /etc/sysctl.conf:
net.ipv4.conf.all.arp_filter = 1
 
Another alternative is to install the interfaces in separate broadcast domains
(either in different switches or in a switch partitioned to VLANs).
 
 
Rx Page Allocation Errors
-------------------------
 
'Page allocation failure. order:0' errors may occur under stress with kernels
2.6.25 and newer. This is caused by the way the Linux kernel reports this
stressed condition.
 
 
 
Host May Reboot after Removing PF when VF is Active in Guest
------------------------------------------------------------
 
Using kernel versions earlier than 3.2, do not unload the PF driver with
active VFs. Doing this will cause your VFs to stop working until you reload
the PF driver and may cause a spontaneous reboot of your system.
 
Prior to unloading the PF driver, you must first ensure that all VFs are 
no longer active. Do this by shutting down all VMs and unloading the VF driver.
 
 
================================================================================
 
 
Support
-------
For general information, go to the Intel support website at:
www.intel.com/support/
 
or the Intel Wired Networking project hosted by Sourceforge at:
http://sourceforge.net/projects/i40evf
If an issue is identified with the released source code on a supported
kernel with a supported adapter, email the specific information related to the
issue to i40evf-devel@lists.sf.net.
 
 
================================================================================
 
 
License
-------
 
This program is free software; you can redistribute it and/or modify it under
the terms and conditions of the GNU General Public License, version 2, as
published by the Free Software Foundation.
 
This program is distributed in the hope it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
St - Fifth Floor, Boston, MA 02110-1301 USA.
 
The full GNU General Public License is included in this distribution in the
file called "COPYING".
 
Intel(R) XL710/X710 Network Driver
Intel(R) XL710/X710 Virtual Function Network Driver
Copyright(c) 2014-2015 Intel Corporation.
================================================================================
 
 
 
Trademarks
----------
 
Intel, Itanium, and Pentium are trademarks or registered trademarks of Intel
Corporation or its subsidiaries in the United States and other countries.
 
* Other names and brands may be claimed as the property of others.
 
 

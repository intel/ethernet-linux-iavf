Linux* Driver for Intel(R) XL710/X710 Virtual Function
======================================================

July 2, 2014

======================================================

Contents
========
- Overview
- Building and Installation
- Command Line Parameters
- Additional Configurations
- Known Issues
- Support
- License

==============================================================================


Overview
--------

This file describes the i40evf Linux* Driver for Intel(R) XL710 and X710 
Virtual Function Network Devices. The driver supports kernel versions 
2.6.32 and newer.

The i40evf driver supports XL710- and X710-based virtual function devices
that can only be activated on kernels with CONFIG_PCI_IOV enabled. SR-IOV
requires the correct platform and OS support.

The i40evf driver supports virtual functions generated by the i40e driver,
with one or more VFs enabled through sysfs.

The guest OS loading the i40evf driver must support MSI-X interrupts.

For questions related to hardware requirements, refer to the documentation
supplied with your Intel Network Adapter. All hardware requirements listed
apply to use with Linux.


Identifying Your Adapter
------------------------

The driver in this release is compatible with XL710 and X710-based Intel
Ethernet Network Devices.

For more information on how to identify your adapter, go to the Adapter &
Driver ID Guide at:

    http://support.intel.com/support/go/network/adapter/idguide.htm

For the latest Intel network drivers for Linux, refer to the following
website. Select the link for your adapter.

    http://support.intel.com/support/go/network/adapter/home.htm


Building and Installation
-------------------------

To build a binary RPM* package of this driver, run 
'rpmbuild -tb <filename.tar.gz>', where <filename.tar.gz> is the specific 
filename of the driver.

NOTES:

- For the build to work properly, the currently running kernel MUST match
  the version and configuration of the installed kernel sources. If you have
  just recompiled the kernel reboot the system before building.
- RPM functionality has only been tested in Red Hat distributions.

1. Move the virtual function driver tar file to the directory of your choice. 
   For example, use '/home/username/i40evf' or '/usr/local/src/i40evf'.

2. Untar/unzip the archive, where <x.x.x> is the version number for the
   driver tar file:
   tar zxf i40evf-<x.x.x>.tar.gz

3. Change to the driver src directory, where <x.x.x> is the version number
   for the driver tar:
   cd i40evf-<x.x.x>/src/

4. Compile the driver module:
   # make install

   The binary will be installed as:
   /lib/modules/<KERNEL VERSION>/kernel/drivers/net/i40evf/i40evf.[k]o

   The install location listed above is the default location. This may differ
   for various Linux distributions.

5. Load the module using the modprobe command:
   modprobe i40evf

   Ensure that older i40evf drivers are removed from the kernel before
   loading the new module:
   rmmod i40evf; modprobe i40evf

6. Assign an IP address to the interface by entering the following, where x
   is the interface number:
   ip addr add <IP address>/<mask bits> brd <IP broadcast> dev <ethx>

7. Verify that the interface works. Enter the following, where IP_address
   is the IP address for another machine on the same subnet as the interface
   that is being tested:
   ping <IP_address>


Command Line Parameters
-----------------------
The i40evf driver does not support any command line parameters.


Additional Configurations
-------------------------

Configuring the Driver on Different Distributions
-------------------------------------------------
Configuring a network driver to load properly when the system is started is
distribution dependent. Typically, the configuration process involves adding
an alias line to /etc/modules.conf or /etc/modprobe.conf as well as editing
other system startup scripts and/or configuration files. Many popular Linux
distributions ship with tools to make these changes for you. To learn the
proper way to configure a network device for your system, refer to your
distribution documentation. If during this process you are asked for the
driver or module name, the name for the Linux Base Driver for the 40 Gigabit
Family of Adapters is i40evf.

As an example, if you install the i40evf driver for two adapters (eth0 and
eth1), add the following to modules.conf or /etc/modprobe.conf:
alias eth0 i40evf
alias eth1 i40evf

Viewing Link Messages
---------------------
Link messages will not be displayed to the console if the distribution is
restricting system messages. In order to see network driver link messages on
your console, set dmesg to eight by entering the following: 
dmesg -n 8

NOTES: This setting is not saved across reboots.


ethtool
-------
The driver utilizes the ethtool interface for driver configuration and
diagnostics, as well as displaying statistical information. ethtool version 3
or later is required for this functionality, although we strongly recommend
downloading the latest version at:
http://ftp.kernel.org/pub/software/network/ethtool/.

================================================================================


Known Issues/Troubleshooting
----------------------------

Hardware Issues
---------------
For known hardware and troubleshooting issues, either refer to the "Release
Notes" in your User Guide, or for more detailed information, go to
http://www.intel.com.

In the search box enter your devices controller ID followed by "spec update"
(i.e., XL710 spec update). The specification update file has complete
information on known hardware issues.


Software Issues
---------------
NOTE: After installing the driver, if your Intel Ethernet Network Connection
is not working, verify that you have installed the correct driver.


Compiling the Driver
--------------------
When trying to compile the driver by running make install, the following error
may occur:  "Linux kernel source not configured - missing version.h"

To solve this issue, create the version.h file by going to the Linux source
tree and entering:
# make include/linux/version.h

Multiple Interfaces on Same Ethernet Broadcast Network
------------------------------------------------------
Due to the default ARP behavior on Linux, it is not possible to have one
system on two IP networks in the same Ethernet broadcast domain
(non-partitioned switch) behave as expected. All Ethernet interfaces will
respond to IP traffic for any IP address assigned to the system. This results
in unbalanced receive traffic.

If you have multiple interfaces in a server, either turn on ARP filtering by
entering: echo 1 > /proc/sys/net/ipv4/conf/all/arp_filter

NOTE: This setting is not saved across reboots. The configuration change can
be made permanent by adding the following line to the /etc/sysctl.conf file:
net.ipv4.conf.all.arp_filter = 1

or,
install the interfaces in separate broadcast domains (either in different
switches or in a switch partitioned to VLANs)


Rx Page Allocation Errors
-------------------------
"order:0" errors may occur under stress with kernels 2.6.25 and above. This is
caused by the way the Linux kernel reports this stressed condition.


Host May Reboot after Removing PF when VF is Active in Guest
------------------------------------------------------------
Using kernel versions earlier than 3.2, do not unload the PF driver with
active VFs. Doing this will cause your VFs to stop working until you reload
the PF driver and may cause a spontaneous reboot of your system.

================================================================================


Support
-------
For general information, go to the Intel support website at:
www.intel.com/support/

or the Intel Wired Networking project hosted by Sourceforge at:
http://sourceforge.net/projects/e1000

If an issue is identified with the released source code on the supported
kernel with a supported adapter, email the specific information related to the
issue to e1000-devel@lists.sf.net.

================================================================================


License
-------
Intel(R) XL710/X710 Virtual Function Network Driver
Copyright(c) 2014 Intel Corporation.

This program is free software; you can redistribute it and/or modify it under
the terms and conditions of the GNU General Public License, version 2, as
published by the Free Software Foundation.

This program is distributed in the hope it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
St - Fifth Floor, Boston, MA 02110-1301 USA.

The full GNU General Public License is included in this distribution in the
file called "COPYING".

================================================================================


Trademarks
----------
Intel, Itanium, and Pentium are trademarks or registered trademarks of Intel
Corporation or its subsidiaries in the United States and other countries.

* Other names and brands may be claimed as the property of others.

